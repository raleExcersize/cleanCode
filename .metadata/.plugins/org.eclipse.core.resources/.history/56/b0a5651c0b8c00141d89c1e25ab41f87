package clean.code.successive.refinement.only.bln;

import java.util.*;

public class Args {

	private String schema;
	private String[] args;
	private boolean valid;
	private Set<Character> unexpectedArguments = new TreeSet<Character>();
	private Map<Character, Boolean> booleanArgs = new HashMap<Character, Boolean>();
	private int numberOfArguments = 0;

	public Args(String schema, String[] args) {
		this.schema = schema;
		this.args = args;
		valid = parse();
	}

	public boolean isValid() {
		return valid;
	}

	private boolean parse() {
		if (schema.length() == 0 && args.length == 0)
			return true;
		parseSchema();
		parseArguments();
		return unexpectedArguments.size() == 0;
	}
	
	
}
